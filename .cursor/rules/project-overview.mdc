---
description: 
globs: 
alwaysApply: true
---
# Project Overview

This is a Government of Canada AI Assistant project built with Next.js and TypeScript. It provides a conversational AI interface with Retrieval Augmented Generation (RAG) capabilities.

## Main Entry Points
- The main application entry is [app/page.tsx](mdc:app/page.tsx)
- The dashboard page is at [app/dashboard/page.tsx](mdc:app/dashboard/page.tsx)
- The chat demo page is at [app/chat-demo/page.tsx](mdc:app/chat-demo/page.tsx)

## Core API Routes
- Streaming chat API: [app/api/chat/streaming/route.ts](mdc:app/api/chat/streaming/route.ts)
- RAG API: [app/api/rag/route.ts](mdc:app/api/rag/route.ts)

## Key Configuration Files
- Next.js config: [next.config.ts](mdc:next.config.ts)
- Package dependencies: [package.json](mdc:package.json) (dependencies locked to specific versions)
- TypeScript config: [tsconfig.json](mdc:tsconfig.json)
- Environment variables: `.env.example` (template) and `.env.local` (local values, not committed)

## Security Architecture
- Environment variables are not committed to version control
- Dependency versions are locked for security in package.json
- Large data files are excluded via .gitignore
- [Security Improvements](mdc:docs/security_improvements.md): Comprehensive security recommendations
- User input validation and sanitization required for all inputs
- Client-side state should never contain sensitive information
